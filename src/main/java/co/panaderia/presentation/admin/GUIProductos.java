package co.panaderia.presentation.admin;

import co.panaderia.domain.entitys.Producto;
import co.panaderia.domain.services.ProductoService;
import co.panaderia.infra.Messages;
import static co.panaderia.infra.Messages.successMessage;
import co.panaderia.infra.RenderImagen;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.beans.PropertyVetoException;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Santiago Acu√±a
 */
public class GUIProductos extends javax.swing.JInternalFrame {

    /**
     * Almacena una lista de productos
     */
    private List<Producto> productos;

    /**
     * Guarda un estado para refrescar la lista de productos
     */
    private boolean EstadoListaProductos;

    /**
     * Guarda la ruta donde se encuenta un archivo
     */
    private String Ruta;

    /**
     * Arreglo de bytes de una imagen
     */
    private byte[] imagen;

    /**
     * Creates new form GUIProductos
     *
     * @throws java.beans.PropertyVetoException
     */
    public GUIProductos() throws PropertyVetoException {
        initComponents();
        this.setTitle("Productos");
        this.setMaximum(true);
        cargarLista();
        mostrarTabla(jTblProductos);
        mostrarTabla(jTblEliminarProductos);
        jBtnModificar.setVisible(false);
        jBtnCancelar.setVisible(false);
        jBtnCargarImagenModificar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlFondo = new javax.swing.JPanel();
        jTbPnProductos = new javax.swing.JTabbedPane();
        jPnlProductos = new javax.swing.JPanel();
        jPnCentro = new javax.swing.JPanel();
        jPnlCentroNorte = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLblCargarImg = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLblProductoNombre = new javax.swing.JLabel();
        jLblProductoPrecioVenta = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTxtADescripcion = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblProductos = new javax.swing.JTable();
        jPnNorte = new javax.swing.JPanel();
        jPnlCrearProducto = new javax.swing.JPanel();
        jPnlFondoCrear = new javax.swing.JPanel();
        jPnNorte3 = new javax.swing.JPanel();
        jPnCentro3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLbImagenCrear = new javax.swing.JLabel();
        jBtnCargarImagenCrear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLbNombre1 = new javax.swing.JLabel();
        jTxfNombreCrear = new javax.swing.JTextField();
        jLbDescripcion1 = new javax.swing.JLabel();
        jTxfDescripcionCrear = new javax.swing.JTextField();
        jLbPrecioVenta1 = new javax.swing.JLabel();
        jTxfPrecioVentaCrear = new javax.swing.JTextField();
        jPnSur2 = new javax.swing.JPanel();
        jBtnCrear = new javax.swing.JButton();
        jBtnLimpiar = new javax.swing.JButton();
        jPnlModificarProducto = new javax.swing.JPanel();
        jPnlFondoModificar = new javax.swing.JPanel();
        jPnNorte2 = new javax.swing.JPanel();
        jLbIdProducto = new javax.swing.JLabel();
        jTxfIdProductoModificar = new javax.swing.JTextField();
        jBtnBuscar = new javax.swing.JButton();
        jBtnModificar = new javax.swing.JButton();
        jBtnCancelar = new javax.swing.JButton();
        jPnCentro2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLbNombre = new javax.swing.JLabel();
        jTxfNombreModificar = new javax.swing.JTextField();
        jLbDescripcion = new javax.swing.JLabel();
        jTxfDescripcionModificar = new javax.swing.JTextField();
        jLbPrecioVenta = new javax.swing.JLabel();
        jTxfPrecioVentaMoficar = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jLbImagenModificar = new javax.swing.JLabel();
        jBtnCargarImagenModificar = new javax.swing.JButton();
        jPnSur1 = new javax.swing.JPanel();
        jPnlEliminarProducto = new javax.swing.JPanel();
        jPnCentro1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTblEliminarProductos = new javax.swing.JTable();
        jPnNorte1 = new javax.swing.JPanel();
        jLblID = new javax.swing.JLabel();
        jTxfID = new javax.swing.JTextField();
        jBtnEliminar = new javax.swing.JButton();
        jPnSur = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(752, 532));

        jPnlFondo.setBackground(new java.awt.Color(54, 33, 88));

        jTbPnProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTbPnProductosMouseClicked(evt);
            }
        });

        jPnlProductos.setLayout(new java.awt.BorderLayout());

        jPnCentro.setLayout(new java.awt.BorderLayout());

        jPnlCentroNorte.setBackground(new java.awt.Color(255, 255, 255));
        jPnlCentroNorte.setPreferredSize(new java.awt.Dimension(711, 200));
        jPnlCentroNorte.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 168));

        jLblCargarImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLblCargarImg, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLblCargarImg, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPnlCentroNorte.add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLblProductoNombre.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLblProductoNombre.setText("Nombre");

        jLblProductoPrecioVenta.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLblProductoPrecioVenta.setText("Precio venta");

        jTxtADescripcion.setEditable(false);
        jTxtADescripcion.setBackground(new java.awt.Color(255, 255, 255));
        jTxtADescripcion.setColumns(20);
        jTxtADescripcion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTxtADescripcion.setRows(5);
        jTxtADescripcion.setText("Descripcion");
        jScrollPane2.setViewportView(jTxtADescripcion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblProductoNombre)
                            .addComponent(jLblProductoPrecioVenta))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLblProductoNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLblProductoPrecioVenta)
                .addGap(57, 57, 57))
        );

        jPnlCentroNorte.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPnCentro.add(jPnlCentroNorte, java.awt.BorderLayout.PAGE_START);

        jTblProductos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jTblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Descripci√≥n", "Precio Venta", "Imagen"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblProductos.setFocusable(false);
        jTblProductos.setRowHeight(30);
        jTblProductos.getTableHeader().setReorderingAllowed(false);
        jTblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTblProductosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTblProductos);

        jPnCentro.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPnlProductos.add(jPnCentro, java.awt.BorderLayout.CENTER);

        jPnNorte.setBackground(new java.awt.Color(54, 33, 88));
        jPnNorte.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnNorte.setPreferredSize(new java.awt.Dimension(450, 50));

        javax.swing.GroupLayout jPnNorteLayout = new javax.swing.GroupLayout(jPnNorte);
        jPnNorte.setLayout(jPnNorteLayout);
        jPnNorteLayout.setHorizontalGroup(
            jPnNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 922, Short.MAX_VALUE)
        );
        jPnNorteLayout.setVerticalGroup(
            jPnNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        jPnlProductos.add(jPnNorte, java.awt.BorderLayout.PAGE_START);

        jTbPnProductos.addTab("Productos", jPnlProductos);

        jPnlCrearProducto.setLayout(new java.awt.BorderLayout());

        jPnlFondoCrear.setLayout(new java.awt.BorderLayout());

        jPnNorte3.setBackground(new java.awt.Color(54, 33, 88));
        jPnNorte3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnNorte3.setPreferredSize(new java.awt.Dimension(450, 50));
        jPnlFondoCrear.add(jPnNorte3, java.awt.BorderLayout.PAGE_START);

        jPnCentro3.setLayout(new java.awt.BorderLayout());

        jPanel6.setPreferredSize(new java.awt.Dimension(350, 288));

        jLbImagenCrear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbImagenCrear.setText("Imagen");
        jLbImagenCrear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jBtnCargarImagenCrear.setText("Cargar Imagen");
        jBtnCargarImagenCrear.setFocusable(false);
        jBtnCargarImagenCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCargarImagenCrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLbImagenCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jBtnCargarImagenCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLbImagenCrear, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnCargarImagenCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPnCentro3.add(jPanel6, java.awt.BorderLayout.LINE_START);

        jPanel3.setPreferredSize(new java.awt.Dimension(924, 50));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 924, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPnCentro3.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel4.setPreferredSize(new java.awt.Dimension(924, 50));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 924, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPnCentro3.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel5.setPreferredSize(new java.awt.Dimension(70, 238));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        jPnCentro3.add(jPanel5, java.awt.BorderLayout.LINE_END);

        jPanel7.setLayout(new java.awt.GridLayout(5, 2));
        jPanel7.add(jLabel1);
        jPanel7.add(jLabel2);

        jLbNombre1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbNombre1.setText("Nombre:");
        jPanel7.add(jLbNombre1);

        jTxfNombreCrear.setBackground(new java.awt.Color(255, 255, 255));
        jTxfNombreCrear.setForeground(new java.awt.Color(0, 0, 0));
        jPanel7.add(jTxfNombreCrear);

        jLbDescripcion1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbDescripcion1.setText("Descripci√≥n:");
        jPanel7.add(jLbDescripcion1);

        jTxfDescripcionCrear.setBackground(new java.awt.Color(255, 255, 255));
        jTxfDescripcionCrear.setForeground(new java.awt.Color(0, 0, 0));
        jPanel7.add(jTxfDescripcionCrear);

        jLbPrecioVenta1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbPrecioVenta1.setText("Precio Venta:");
        jPanel7.add(jLbPrecioVenta1);

        jTxfPrecioVentaCrear.setBackground(new java.awt.Color(255, 255, 255));
        jTxfPrecioVentaCrear.setForeground(new java.awt.Color(0, 0, 0));
        jTxfPrecioVentaCrear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxfPrecioVentaCrearKeyTyped(evt);
            }
        });
        jPanel7.add(jTxfPrecioVentaCrear);

        jPnCentro3.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPnlFondoCrear.add(jPnCentro3, java.awt.BorderLayout.CENTER);

        jPnSur2.setBackground(new java.awt.Color(54, 33, 88));
        jPnSur2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnSur2.setPreferredSize(new java.awt.Dimension(450, 50));

        jBtnCrear.setText("Crear Producto");
        jBtnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCrearActionPerformed(evt);
            }
        });
        jPnSur2.add(jBtnCrear);

        jBtnLimpiar.setText("Limpiar campos");
        jBtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimpiarActionPerformed(evt);
            }
        });
        jPnSur2.add(jBtnLimpiar);

        jPnlFondoCrear.add(jPnSur2, java.awt.BorderLayout.PAGE_END);

        jPnlCrearProducto.add(jPnlFondoCrear, java.awt.BorderLayout.CENTER);

        jTbPnProductos.addTab("Crear Producto", jPnlCrearProducto);

        jPnlModificarProducto.setLayout(new java.awt.BorderLayout());

        jPnlFondoModificar.setLayout(new java.awt.BorderLayout());

        jPnNorte2.setBackground(new java.awt.Color(54, 33, 88));
        jPnNorte2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnNorte2.setPreferredSize(new java.awt.Dimension(450, 50));

        jLbIdProducto.setForeground(new java.awt.Color(255, 255, 255));
        jLbIdProducto.setText("ID");
        jPnNorte2.add(jLbIdProducto);

        jTxfIdProductoModificar.setBackground(new java.awt.Color(255, 255, 255));
        jTxfIdProductoModificar.setForeground(new java.awt.Color(0, 0, 0));
        jTxfIdProductoModificar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxfIdProductoModificar.setPreferredSize(new java.awt.Dimension(100, 24));
        jPnNorte2.add(jTxfIdProductoModificar);

        jBtnBuscar.setText("Buscar");
        jBtnBuscar.setFocusPainted(false);
        jBtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBuscarActionPerformed(evt);
            }
        });
        jPnNorte2.add(jBtnBuscar);

        jBtnModificar.setText("Modificar");
        jBtnModificar.setFocusPainted(false);
        jBtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModificarActionPerformed(evt);
            }
        });
        jPnNorte2.add(jBtnModificar);

        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });
        jPnNorte2.add(jBtnCancelar);

        jPnlFondoModificar.add(jPnNorte2, java.awt.BorderLayout.PAGE_START);

        jPnCentro2.setLayout(new java.awt.BorderLayout());

        jPanel8.setPreferredSize(new java.awt.Dimension(70, 288));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        jPnCentro2.add(jPanel8, java.awt.BorderLayout.LINE_END);

        jPanel10.setPreferredSize(new java.awt.Dimension(924, 50));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 924, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPnCentro2.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        jPanel11.setPreferredSize(new java.awt.Dimension(924, 50));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 924, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPnCentro2.add(jPanel11, java.awt.BorderLayout.PAGE_END);

        jPanel12.setLayout(new java.awt.GridLayout(5, 2));
        jPanel12.add(jLabel3);
        jPanel12.add(jLabel4);

        jLbNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbNombre.setText("Nombre:");
        jPanel12.add(jLbNombre);

        jTxfNombreModificar.setBackground(new java.awt.Color(255, 255, 255));
        jTxfNombreModificar.setForeground(new java.awt.Color(0, 0, 0));
        jPanel12.add(jTxfNombreModificar);

        jLbDescripcion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbDescripcion.setText("Descripci√≥n:");
        jPanel12.add(jLbDescripcion);

        jTxfDescripcionModificar.setBackground(new java.awt.Color(255, 255, 255));
        jTxfDescripcionModificar.setForeground(new java.awt.Color(0, 0, 0));
        jPanel12.add(jTxfDescripcionModificar);

        jLbPrecioVenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbPrecioVenta.setText("Precio Venta:");
        jPanel12.add(jLbPrecioVenta);

        jTxfPrecioVentaMoficar.setBackground(new java.awt.Color(255, 255, 255));
        jTxfPrecioVentaMoficar.setForeground(new java.awt.Color(0, 0, 0));
        jTxfPrecioVentaMoficar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxfPrecioVentaMoficarKeyTyped(evt);
            }
        });
        jPanel12.add(jTxfPrecioVentaMoficar);

        jPnCentro2.add(jPanel12, java.awt.BorderLayout.CENTER);

        jPanel13.setPreferredSize(new java.awt.Dimension(350, 288));

        jLbImagenModificar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbImagenModificar.setText("Imagen");
        jLbImagenModificar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jBtnCargarImagenModificar.setText("Cargar Imagen");
        jBtnCargarImagenModificar.setFocusable(false);
        jBtnCargarImagenModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jBtnCargarImagenModificarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLbImagenModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jBtnCargarImagenModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLbImagenModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnCargarImagenModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPnCentro2.add(jPanel13, java.awt.BorderLayout.LINE_START);

        jPnlFondoModificar.add(jPnCentro2, java.awt.BorderLayout.CENTER);

        jPnSur1.setBackground(new java.awt.Color(54, 33, 88));
        jPnSur1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnSur1.setPreferredSize(new java.awt.Dimension(450, 50));
        jPnlFondoModificar.add(jPnSur1, java.awt.BorderLayout.PAGE_END);

        jPnlModificarProducto.add(jPnlFondoModificar, java.awt.BorderLayout.CENTER);

        jTbPnProductos.addTab("Modificar Producto", jPnlModificarProducto);

        jPnlEliminarProducto.setLayout(new java.awt.BorderLayout());

        jPnCentro1.setLayout(new java.awt.BorderLayout());

        jTblEliminarProductos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jTblEliminarProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Descripc√≤n", "Precio Venta", "Imagen"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblEliminarProductos.setFocusable(false);
        jTblEliminarProductos.setRowHeight(30);
        jTblEliminarProductos.getTableHeader().setReorderingAllowed(false);
        jTblEliminarProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTblEliminarProductosMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTblEliminarProductos);

        jPnCentro1.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPnlEliminarProducto.add(jPnCentro1, java.awt.BorderLayout.CENTER);

        jPnNorte1.setBackground(new java.awt.Color(54, 33, 88));
        jPnNorte1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnNorte1.setPreferredSize(new java.awt.Dimension(450, 50));

        jLblID.setForeground(new java.awt.Color(255, 255, 255));
        jLblID.setText("ID");
        jPnNorte1.add(jLblID);

        jTxfID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxfID.setMinimumSize(new java.awt.Dimension(100, 24));
        jTxfID.setPreferredSize(new java.awt.Dimension(200, 24));
        jPnNorte1.add(jTxfID);

        jBtnEliminar.setText("Borrar");
        jBtnEliminar.setFocusPainted(false);
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });
        jPnNorte1.add(jBtnEliminar);

        jPnlEliminarProducto.add(jPnNorte1, java.awt.BorderLayout.PAGE_START);

        jPnSur.setBackground(new java.awt.Color(54, 33, 88));
        jPnSur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnSur.setPreferredSize(new java.awt.Dimension(450, 50));
        jPnlEliminarProducto.add(jPnSur, java.awt.BorderLayout.PAGE_END);

        jTbPnProductos.addTab("Eliminar Productos", jPnlEliminarProducto);

        javax.swing.GroupLayout jPnlFondoLayout = new javax.swing.GroupLayout(jPnlFondo);
        jPnlFondo.setLayout(jPnlFondoLayout);
        jPnlFondoLayout.setHorizontalGroup(
            jPnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTbPnProductos)
        );
        jPnlFondoLayout.setVerticalGroup(
            jPnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTbPnProductos, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        getContentPane().add(jPnlFondo, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Medoto encargado de eliminar un producto en la base de datos
     *
     * @param evt
     */
    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed

        String id = jTxfID.getText().trim();

        ProductoService service = new ProductoService();
        // Inyecta la dependencia
        if (id.equals("")) {
            jTxfID.requestFocus();
            Messages.warningMessage("Debe ingresar un ID para poder borrar un registro", "Warning");
            return;
        }

        int confirmacion = Messages.confirmMessage("¬ø Desea borrar el registro ?", "Confirm");

        try {
            if (confirmacion < 1 && confirmacion > -1) {
                boolean aux = service.eliminar(Integer.parseInt(id));
                Producto aux2 = service.buscar(Integer.parseInt(id));
                if (aux2 != null) {
                    Messages.warningMessage("No se pudo borrar el producto", "Warning");
                    EstadoListaProductos = false;
                    return;
                }
                EstadoListaProductos = true;
            } else {
                EstadoListaProductos = false;
                return;
            }
        } catch (NumberFormatException ex) {
            jTxfID.setText("");
            Logger.getLogger(GUIProductos.class.getName()).log(Level.SEVERE, null, ex);
            successMessage("Identificador no valido", "Atenci√≥n");
            EstadoListaProductos = false;
            return;
        }
        Messages.successMessage("El producto " + id + " fue elimado", "EXITO");
        cargarLista();
        mostrarTabla(jTblEliminarProductos);
    }//GEN-LAST:event_jBtnEliminarActionPerformed

    /**
     * Evento encargado de actualizar las tablas para listar productos y
     * eliminar productos
     *
     * @param evt
     */
    private void jTbPnProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTbPnProductosMouseClicked
        if (EstadoListaProductos) {
            cargarLista();
            mostrarTabla(jTblProductos);
            mostrarTabla(jTblEliminarProductos);
            EstadoListaProductos = false;
        }
    }//GEN-LAST:event_jTbPnProductosMouseClicked

    /**
     * Limpia los controles para el formulario de crear producto
     *
     * @param evt evento del formulario
     */
    private void jBtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimpiarActionPerformed
        this.clearControls();
    }//GEN-LAST:event_jBtnLimpiarActionPerformed

    /**
     * Accion para crear un producto mediante un servicio encargado de guardarlo
     * en la base de datos
     *
     * @param evt Evento del formulario
     */
    private void jBtnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCrearActionPerformed
        ProductoService service = new ProductoService();
        String nombre = jTxfNombreCrear.getText();
        String descripcion = jTxfDescripcionCrear.getText();
        String precio = jTxfPrecioVentaCrear.getText();

        if (descripcion.equals("") || nombre.equals("") || precio.equals("")) {
            jTxfNombreCrear.requestFocus();
            Messages.warningMessage("ERROR AL CREAR PRODUCTO: \nCampos vacios", "Warning");
            return;
        }
        Producto newProducto = new Producto();
        newProducto.setNombre(nombre);
        newProducto.setDescripcion(descripcion);
        newProducto.setPrecioVenta(Double.parseDouble(precio));
        if (Ruta == null) {
            newProducto.setImagen(imagen);
        } else {
            newProducto.setImagen(obtenerImagen(Ruta));
        }
        try {
            if (service.crear(newProducto)) {
                successMessage("Producto creado con √©xito.", "Atenci√≥n");
            } else {
                Messages.warningMessage("El producto no pudo ser creado", "Warning");
            }
            clearControls();
        } catch (Exception ex) {
            successMessage(ex.getMessage(), "Atenci√≥n");
        }
        newProducto = null;
        Ruta = null;
        imagen = null;
        EstadoListaProductos = true;
    }//GEN-LAST:event_jBtnCrearActionPerformed

    /**
     * Modifica un plato con los atributos que tiene el formulario
     *
     * @param evt evento del boton
     */
    private void jBtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModificarActionPerformed
        String nombre = jTxfNombreModificar.getText();
        String descripcion = jTxfDescripcionModificar.getText();
        String precio = jTxfPrecioVentaMoficar.getText();
        Producto proModificar = new Producto();
        proModificar.setId(Integer.parseInt(jTxfIdProductoModificar.getText()));
        proModificar.setNombre(nombre);
        proModificar.setDescripcion(descripcion);
        proModificar.setPrecioVenta(Double.parseDouble(precio));
        if (Ruta == null) {
            proModificar.setImagen(imagen);
        } else {
            proModificar.setImagen(obtenerImagen(Ruta));
        }
        ProductoService service = new ProductoService();
        boolean respuesta;
        if (nombre.equals("") || precio.equals("") || descripcion.equals("")) {
            jTxfNombreModificar.requestFocus();
            Messages.warningMessage("Campos vacios: Error al modificar", "Warning");
            return;
        }
        try {
            respuesta = service.actualizar(proModificar);
            if (respuesta == false) {
                clearControls();
                this.jTxfIdProductoModificar.requestFocus();
                Messages.warningMessage("No se pudo modificar el Producto", "Warning");
                this.jBtnModificar.setVisible(false);
                return;
            }
        } catch (Exception ex) {
            clearControls();
            successMessage(ex.getMessage(), "Atenci√≥n");
            return;
        }
        clearControls();
        this.jTxfIdProductoModificar.requestFocus();
        successMessage("Se modifico el producto con exito.", "EXITO");
        proModificar = null;
        Ruta = null;
        imagen = null;
        this.jBtnModificar.setVisible(false);
        this.jBtnBuscar.setVisible(true);
        this.jBtnCancelar.setVisible(false);
        this.jBtnCargarImagenModificar.setVisible(false);
        this.jTxfIdProductoModificar.setEnabled(true);
        EstadoListaProductos = true;
    }//GEN-LAST:event_jBtnModificarActionPerformed

    /**
     * Metodo encargado de buscar en la base de datos un identificador de un
     * plato
     *
     * @param evt Accion evento del formulario, en este caso accion buscar
     */
    private void jBtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBuscarActionPerformed
        String id = jTxfIdProductoModificar.getText().trim();

        ProductoService service = new ProductoService();

        if (id.equals("")) {
            jTxfIdProductoModificar.requestFocus();
            Messages.warningMessage("ERROR: El campo Id esta vacio.", "Warning");
            return;
        }
        Producto producto;
        try {
            producto = service.buscar(Integer.parseInt(id));
            if (producto == null) {
                jTxfIdProductoModificar.requestFocus();
                clearControls();
                Messages.warningMessage("ERROR: No se encontro el producto.", "Warning");
                return;
            }
            clearControls();
            showData(producto);
        } catch (NumberFormatException ex) {
            jTxfIdProductoModificar.setText("");
            clearControls();
            successMessage("Identificador no valido", "Atenci√≥n");
            return;
        }

        Ruta = null;
        jTxfIdProductoModificar.setEnabled(false);
        jBtnModificar.setVisible(true);
        jBtnCancelar.setVisible(true);
        jBtnCargarImagenModificar.setVisible(true);
        jBtnBuscar.setVisible(false);
        jTxfIdProductoModificar.setEnabled(false);
    }//GEN-LAST:event_jBtnBuscarActionPerformed

    /**
     * Boton encargado de cancelar una modificaci√≥n de un producto
     *
     * @param evt
     */
    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
        Ruta = null;
        jBtnModificar.setVisible(false);
        jBtnCancelar.setVisible(false);
        jBtnCargarImagenModificar.setVisible(false);
        jBtnBuscar.setVisible(true);
        jTxfIdProductoModificar.setEnabled(true);
        this.clearControls();
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    /**
     * M√©todo encargado de seleccionar una imagen desde el computador
     *
     * @param evt Evento del formulario
     */
    private void jBtnCargarImagenModificarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnCargarImagenModificarMousePressed
        this.seleccionarImagen(jLbImagenModificar);
    }//GEN-LAST:event_jBtnCargarImagenModificarMousePressed

    /**
     * M√©todo encargado de seleccionar una imagen desde el computador
     *
     * @param evt Evento del formulario
     */
    private void jBtnCargarImagenCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCargarImagenCrearActionPerformed
        this.seleccionarImagen(jLbImagenCrear);
    }//GEN-LAST:event_jBtnCargarImagenCrearActionPerformed

    private void jTxfPrecioVentaCrearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxfPrecioVentaCrearKeyTyped
        int key = (int) evt.getKeyChar();

        if (key >= 46 && key <= 57) {
            if (key == 46) {
                String dato = jTxfPrecioVentaCrear.getText();
                for (int i = 0; i < dato.length(); i++) {
                    if (dato.contains(".")) {
                        evt.setKeyChar((char) KeyEvent.VK_CLEAR);
                    }
                }
                if (key == 47) {
                    evt.setKeyChar((char) KeyEvent.VK_CLEAR);
                    evt.consume();
                }
            }
        } else {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            evt.consume();
        }
    }//GEN-LAST:event_jTxfPrecioVentaCrearKeyTyped

    private void jTxfPrecioVentaMoficarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxfPrecioVentaMoficarKeyTyped
        int key = (int) evt.getKeyChar();

        if (key >= 46 && key <= 57) {
            if (key == 46) {
                String dato = jTxfPrecioVentaMoficar.getText();
                for (int i = 0; i < dato.length(); i++) {
                    if (dato.contains(".")) {
                        evt.setKeyChar((char) KeyEvent.VK_CLEAR);
                    }
                }
                if (key == 47) {
                    evt.setKeyChar((char) KeyEvent.VK_CLEAR);
                    evt.consume();
                }
            }
        } else {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            evt.consume();
        }
    }//GEN-LAST:event_jTxfPrecioVentaMoficarKeyTyped

    /**
     * Evento encargado de capturar el indice de la fila para la tabla de
     * eliminar productos
     *
     * @param evt Evento del formulario
     */
    private void jTblEliminarProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblEliminarProductosMousePressed
        int i = jTblEliminarProductos.getSelectedRow();
        TableModel model = jTblEliminarProductos.getModel();
        this.jTxfID.setText(model.getValueAt(i, 0).toString());    }//GEN-LAST:event_jTblEliminarProductosMousePressed

    /**
     * Evento encargado de mostrar la informacion para cada producto de la lista
     * de productos
     *
     * @param evt
     */
    private void jTblProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblProductosMousePressed
        int i = jTblProductos.getSelectedRow();
        TableModel model = jTblProductos.getModel();
        jLblProductoNombre.setText(model.getValueAt(i, 1).toString());
        jTxtADescripcion.setText(model.getValueAt(i, 2).toString());
        jLblProductoPrecioVenta.setText(model.getValueAt(i, 3).toString());
        if (jTblProductos.getValueAt(i, 4) != null) {
            ProductoService service = new ProductoService();
            Producto product = service.buscar(Integer.parseInt(model.getValueAt(i, 0).toString()));
            asignarImagen(product, jLblCargarImg);
            product = null;
        } else {
            addIcon(jLblCargarImg, "src/main/java/resources/ProductoLogo.png");
        }
    }//GEN-LAST:event_jTblProductosMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBuscar;
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnCargarImagenCrear;
    private javax.swing.JButton jBtnCargarImagenModificar;
    private javax.swing.JButton jBtnCrear;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnLimpiar;
    private javax.swing.JButton jBtnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLbDescripcion;
    private javax.swing.JLabel jLbDescripcion1;
    private javax.swing.JLabel jLbIdProducto;
    private javax.swing.JLabel jLbImagenCrear;
    private javax.swing.JLabel jLbImagenModificar;
    private javax.swing.JLabel jLbNombre;
    private javax.swing.JLabel jLbNombre1;
    private javax.swing.JLabel jLbPrecioVenta;
    private javax.swing.JLabel jLbPrecioVenta1;
    private javax.swing.JLabel jLblCargarImg;
    private javax.swing.JLabel jLblID;
    private javax.swing.JLabel jLblProductoNombre;
    private javax.swing.JLabel jLblProductoPrecioVenta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPnCentro;
    private javax.swing.JPanel jPnCentro1;
    private javax.swing.JPanel jPnCentro2;
    private javax.swing.JPanel jPnCentro3;
    private javax.swing.JPanel jPnNorte;
    private javax.swing.JPanel jPnNorte1;
    private javax.swing.JPanel jPnNorte2;
    private javax.swing.JPanel jPnNorte3;
    private javax.swing.JPanel jPnSur;
    private javax.swing.JPanel jPnSur1;
    private javax.swing.JPanel jPnSur2;
    private javax.swing.JPanel jPnlCentroNorte;
    private javax.swing.JPanel jPnlCrearProducto;
    private javax.swing.JPanel jPnlEliminarProducto;
    private javax.swing.JPanel jPnlFondo;
    private javax.swing.JPanel jPnlFondoCrear;
    private javax.swing.JPanel jPnlFondoModificar;
    private javax.swing.JPanel jPnlModificarProducto;
    private javax.swing.JPanel jPnlProductos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTbPnProductos;
    private javax.swing.JTable jTblEliminarProductos;
    private javax.swing.JTable jTblProductos;
    private javax.swing.JTextField jTxfDescripcionCrear;
    private javax.swing.JTextField jTxfDescripcionModificar;
    private javax.swing.JTextField jTxfID;
    private javax.swing.JTextField jTxfIdProductoModificar;
    private javax.swing.JTextField jTxfNombreCrear;
    private javax.swing.JTextField jTxfNombreModificar;
    private javax.swing.JTextField jTxfPrecioVentaCrear;
    private javax.swing.JTextField jTxfPrecioVentaMoficar;
    private javax.swing.JTextArea jTxtADescripcion;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo encargado de mostrar los datos en un jtable
     */
    private void mostrarTabla(JTable table) {
        DefaultTableModel modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Descripci√≥n");
        modeloTabla.addColumn("Precio Venta");
        modeloTabla.addColumn("Imagen");

        cargarImagenesEnTabla(modeloTabla, table);

    }

    private void cargarImagenesEnTabla(DefaultTableModel modelo, JTable table) {
        table.setDefaultRenderer(Object.class, new RenderImagen());
        Producto product;
        Object Datos[] = new Object[5];
        for (int i = 0; i < productos.size(); i++) {
            product = (Producto) productos.get(i);
            Datos[0] = String.valueOf(product.getId());
            Datos[1] = product.getNombre();
            Datos[2] = product.getDescripcion();
            Datos[3] = String.valueOf(product.getPrecioVenta());
            if (product.getImagen() != null) {
                try {
                    byte[] imagenF = product.getImagen();
                    BufferedImage bufferedImage = null;
                    InputStream inputStream = new ByteArrayInputStream(imagenF);
                    bufferedImage = ImageIO.read(inputStream);
                    ImageIcon myIcon = new ImageIcon(bufferedImage.getScaledInstance(60, 60, 0));
                    Datos[4] = new JLabel(myIcon);
                } catch (IOException ex) {
                    Logger.getLogger(GUIProductos.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                Datos[4] = null;
            }
            modelo.addRow(Datos);
        }
        table.setModel(modelo);
        table.setRowHeight(60);
        table.getColumnModel().getColumn(0).setPreferredWidth(60);
        table.getColumnModel().getColumn(1).setPreferredWidth(60);
        table.getColumnModel().getColumn(2).setPreferredWidth(60);
        table.getColumnModel().getColumn(3).setPreferredWidth(60);
        table.getColumnModel().getColumn(4).setPreferredWidth(60);
    }

    /**
     * Metodo encargado de cargar un icono para una etiquetas
     *
     * @param lb Etiqueta que funciona como icono
     * @param pathIcon Direccion donde se encuentra el icono
     */
    private void addIcon(JLabel lb, String pathIcon) {
        ImageIcon img = new ImageIcon(pathIcon);
        Icon icono = new ImageIcon(img.getImage().getScaledInstance(
                lb.getWidth(),
                lb.getHeight(),
                Image.SCALE_DEFAULT));
        lb.setIcon(icono);
        this.repaint();
    }

    /**
     * Carga un lista de la base de datos a travez de un servicio
     */
    private void cargarLista() {
        ProductoService service = new ProductoService();
        try {
            productos = service.list();
        } catch (Exception ex) {
            successMessage(ex.getMessage(), "Atenci√≥n");
        }
    }

    /**
     * Este metodo muestra en el formulario los datos que tiene un objeto
     *
     * @param mainDish Objeto plato principal
     */
    private void showData(Producto producto) {
        jTxfNombreModificar.setText(producto.getNombre());
        jTxfDescripcionModificar.setText(producto.getDescripcion());
        jTxfPrecioVentaMoficar.setText(Double.toString(producto.getPrecioVenta()));
        asignarImagen(producto, jLbImagenModificar);
    }

    /**
     * Este metodo limpia todos los controles en el formulario
     */
    public void clearControls() {

        jTxfNombreModificar.setText("");
        jTxfDescripcionModificar.setText("");
        jTxfPrecioVentaMoficar.setText("");
        jTxfNombreCrear.setText("");
        jTxfDescripcionCrear.setText("");
        jTxfPrecioVentaCrear.setText("");
        jLbImagenModificar.setIcon(null);
        jLbImagenCrear.setIcon(null);
    }

    /**
     * Muestra en un label una imagen seleccionado desde el explorador
     *
     * @param lb
     */
    public void seleccionarImagen(JLabel lb) {
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("JPG, PNG & GIF", "jpg", "png", "gif");
        fileChooser.setFileFilter(extensionFilter);

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            Ruta = fileChooser.getSelectedFile().getAbsolutePath();
            Image myImage = new ImageIcon(Ruta).getImage();
            ImageIcon myIcon = new ImageIcon(myImage.getScaledInstance(
                    lb.getWidth(), lb.getHeight(), 0));
            lb.setIcon(myIcon);
        }
    }

    /**
     * Metodo encargado de convertir una igamen en arreglo de bytes
     *
     * @param rutaImage ruta de la imagen a convertir
     * @return Arreglo de bytes
     */
    private byte[] obtenerImagen(String rutaImage) {
        if (rutaImage == null) {
            return null;
        }
        File imagenf = new File(rutaImage);
        try {
            byte[] icono = new byte[(int) imagenf.length()];
            InputStream input = new FileInputStream(imagenf);
            input.read(icono);
            return icono;
        } catch (IOException ex) {
            Logger.getLogger(GUIProductos.class.getName()).log(Level.SEVERE, null, ex);
            successMessage(ex.getMessage(), "Atenci√≥n");
        }
        return null;
    }

    private void asignarImagen(Producto producto, JLabel label) {
        if (producto.getImagen() != null) {
            try {
                imagen = producto.getImagen();
                BufferedImage bufferedImage = null;
                InputStream inputStream = new ByteArrayInputStream(imagen);
                bufferedImage = ImageIO.read(inputStream);
                ImageIcon myIcon = new ImageIcon(bufferedImage.getScaledInstance(
                        335, 217, 0));
                label.setIcon(myIcon);
            } catch (IOException ex) {
                Logger.getLogger(GUIProductos.class.getName()).log(Level.SEVERE, null, ex);
                successMessage(ex.toString(), "Atenci√≥n");
            }

        }
    }
}
